/**
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudmersiveValidateApiClient);
  }
}(this, function(expect, CloudmersiveValidateApiClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudmersiveValidateApiClient.UserAgentValidateResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserAgentValidateResponse', function() {
    it('should create an instance of UserAgentValidateResponse', function() {
      // uncomment below and update the code to test UserAgentValidateResponse
      //var instane = new CloudmersiveValidateApiClient.UserAgentValidateResponse();
      //expect(instance).to.be.a(CloudmersiveValidateApiClient.UserAgentValidateResponse);
    });

    it('should have the property successful (base name: "Successful")', function() {
      // uncomment below and update the code to test the property successful
      //var instane = new CloudmersiveValidateApiClient.UserAgentValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property isBot (base name: "IsBot")', function() {
      // uncomment below and update the code to test the property isBot
      //var instane = new CloudmersiveValidateApiClient.UserAgentValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property botName (base name: "BotName")', function() {
      // uncomment below and update the code to test the property botName
      //var instane = new CloudmersiveValidateApiClient.UserAgentValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property botURL (base name: "BotURL")', function() {
      // uncomment below and update the code to test the property botURL
      //var instane = new CloudmersiveValidateApiClient.UserAgentValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property operatingSystem (base name: "OperatingSystem")', function() {
      // uncomment below and update the code to test the property operatingSystem
      //var instane = new CloudmersiveValidateApiClient.UserAgentValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property operatingSystemCPUPlatform (base name: "OperatingSystemCPUPlatform")', function() {
      // uncomment below and update the code to test the property operatingSystemCPUPlatform
      //var instane = new CloudmersiveValidateApiClient.UserAgentValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property operatingSystemVersion (base name: "OperatingSystemVersion")', function() {
      // uncomment below and update the code to test the property operatingSystemVersion
      //var instane = new CloudmersiveValidateApiClient.UserAgentValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property deviceType (base name: "DeviceType")', function() {
      // uncomment below and update the code to test the property deviceType
      //var instane = new CloudmersiveValidateApiClient.UserAgentValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property deviceBrandName (base name: "DeviceBrandName")', function() {
      // uncomment below and update the code to test the property deviceBrandName
      //var instane = new CloudmersiveValidateApiClient.UserAgentValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property deviceModel (base name: "DeviceModel")', function() {
      // uncomment below and update the code to test the property deviceModel
      //var instane = new CloudmersiveValidateApiClient.UserAgentValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property browserName (base name: "BrowserName")', function() {
      // uncomment below and update the code to test the property browserName
      //var instane = new CloudmersiveValidateApiClient.UserAgentValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property browserVersion (base name: "BrowserVersion")', function() {
      // uncomment below and update the code to test the property browserVersion
      //var instane = new CloudmersiveValidateApiClient.UserAgentValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property browserEngineName (base name: "BrowserEngineName")', function() {
      // uncomment below and update the code to test the property browserEngineName
      //var instane = new CloudmersiveValidateApiClient.UserAgentValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property browserEngineVersion (base name: "BrowserEngineVersion")', function() {
      // uncomment below and update the code to test the property browserEngineVersion
      //var instane = new CloudmersiveValidateApiClient.UserAgentValidateResponse();
      //expect(instance).to.be();
    });

  });

}));
